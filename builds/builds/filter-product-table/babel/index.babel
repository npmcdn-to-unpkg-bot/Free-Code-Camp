
var products = [ {category: "Sporting Goods", price: "$49.99", stocked: true, name: "Football"}, {category: "Sporting Goods", price: "$9.99", stocked: true, name: "Baseball"}, {category: "Sporting Goods", price: "$29.99", stocked: false, name: "Basketball"}, {category: "Electronics", price: "$99.99", stocked: true, name: "iPod Touch"}, {category: "Electronics", price: "$399.99", stocked: false, name: "iPhone 5"}, {category: "Electronics", price: "$199.99", stocked: true, name: "Nexus 7"} ];

var ProductRow = React.createClass({
	render: function() {
		var name = this.props.product.stocked ? this.props.product.name : <span style={{ color: 'red'}}>{this.props.product.name}</span> ;
	return (
		<tr>
			<td>{name}</td><td>{this.props.product.price}</td>
		</tr>
	);
	}
});

var ProductCategoryRow = React.createClass({
	render: function() {
		return (
			<tr>
				<th colSpan="2">{this.props.category}</th>
			</tr>
		);
	}
});


var ProductTable = React.createClass({
	render: function() {
		var rows=[];
		var lastCategory= null;
		this.props.products.map(function(product) {
			if (!product.stocked && this.props.isFiltered || product.name.indexOf(this.props.userText)===-1) {
				return;
			}
			if (product.category !== lastCategory) {
				rows.push( <ProductCategoryRow category={product.category} />);
			}
			rows.push( <ProductRow product={product} />);
			lastCategory = product.category;
		}.bind(this));
	return (
		<table className="table table-striped table-hover">
			<thead>
				<tr><th>Name</th><th>Price</th></tr>
			</thead>
			<tbody>{rows}</tbody>
		</table>
	);
	
	}
});

var SearchBar = React.createClass({
	handleChange: function() {
		this.props.onUserInput( this.refs.uCheck.checked , this.refs.text.value);
	},
	render: function() {
		return (
			<div>
				<form>
					<input type="text" ref="text" placeholder="search..." value={this.props.userText} onChange={this.handleChange}/>
					<p><input ref="uCheck" type="checkbox" onChange={this.handleChange} checked={this.props.isFiltered} /> Click to hide items not in stock </p>
				</form>
				
			</div>
		);
	}
});

var FilterableProductTable = React.createClass({
	getInitialState: function() {
		return { isFiltered: false , userText: ''};
	},
	onUserInput: function( isFiltered , userText) {
		this.setState({ isFiltered: isFiltered , userText: userText});
	},
	render: function() {
		return (
			<div>
				<SearchBar isFiltered={this.state.isFiltered} userText={this.state.userText} onUserInput={this.onUserInput} />
				<ProductTable products={this.props.products}
					isFiltered={this.state.isFiltered} userText={this.state.userText} />
			</div>
		);
	}
});

React.render(
	<FilterableProductTable products={products} /> , document.getElementById("displayMe")
);